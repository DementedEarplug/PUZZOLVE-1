Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COMMENT
    EDIT
    GET
    MOVES
    OBSTABLE
    REMOVE
    REPLACE

Grammar

Rule 0     S' -> eval
Rule 1     eval -> go_up
Rule 2     eval -> end_map
Rule 3     eval -> run_solution
Rule 4     eval -> set_traverse
Rule 5     eval -> go_down
Rule 6     eval -> exit_game
Rule 7     eval -> go_left
Rule 8     eval -> undo_move
Rule 9     eval -> build_map
Rule 10    eval -> build_solution
Rule 11    eval -> go_right
Rule 12    eval -> start_map
Rule 13    eval -> switch_map
Rule 14    eval -> set_obstacle
Rule 15    eval -> map_assign
Rule 16    eval -> solution_assign
Rule 17    eval -> empty
Rule 18    go_up -> MOVE UP
Rule 19    go_up -> MOVE UP INT
Rule 20    go_up -> MOVE UP LP INT RP
Rule 21    end_map -> SET END AT INT INT
Rule 22    run_solution -> RUN ID
Rule 23    set_traverse -> SET TRAVERSE TO INT INT COMMA INT INT
Rule 24    go_down -> MOVE DOWN
Rule 25    go_down -> MOVE DOWN INT
Rule 26    go_down -> MOVE DOWN LP INT RP
Rule 27    exit_game -> EXIT
Rule 28    go_left -> MOVE LEFT
Rule 29    go_left -> MOVE LEFT INT
Rule 30    go_left -> MOVE LEFT LP INT RP
Rule 31    undo_move -> UNDO
Rule 32    build_map -> BUILD MAP ID
Rule 33    build_solution -> BUILD SOLUTION ID
Rule 34    go_right -> MOVE RIGHT
Rule 35    go_right -> MOVE RIGHT INT
Rule 36    go_right -> MOVE RIGHT LP INT RP
Rule 37    start_map -> SET START AT INT INT
Rule 38    switch_map -> SWITCH TO ID
Rule 39    set_obstacle -> ADD ID AT INT INT
Rule 40    set_obstacle -> ADD ID AT INT COMMA INT
Rule 41    set_obstacle -> ADD ID AT LP INT COMMA INT RP
Rule 42    map_assign -> CREATE MAP NAMED ID
Rule 43    solution_assign -> CREATE SOLUTION NAMED ID
Rule 44    empty -> <empty>

Terminals, with rules where they appear

ADD                  : 39 40 41
AT                   : 21 37 39 40 41
BUILD                : 32 33
COMMA                : 23 40 41
COMMENT              : 
CREATE               : 42 43
DOWN                 : 24 25 26
EDIT                 : 
END                  : 21
EXIT                 : 27
GET                  : 
ID                   : 22 32 33 38 39 40 41 42 43
INT                  : 19 20 21 21 23 23 23 23 25 26 29 30 35 36 37 37 39 39 40 40 41 41
LEFT                 : 28 29 30
LP                   : 20 26 30 36 41
MAP                  : 32 42
MOVE                 : 18 19 20 24 25 26 28 29 30 34 35 36
MOVES                : 
NAMED                : 42 43
OBSTABLE             : 
REMOVE               : 
REPLACE              : 
RIGHT                : 34 35 36
RP                   : 20 26 30 36 41
RUN                  : 22
SET                  : 21 23 37
SOLUTION             : 33 43
START                : 37
SWITCH               : 38
TO                   : 23 38
TRAVERSE             : 23
UNDO                 : 31
UP                   : 18 19 20
error                : 

Nonterminals, with rules where they appear

build_map            : 9
build_solution       : 10
empty                : 17
end_map              : 2
eval                 : 0
exit_game            : 6
go_down              : 5
go_left              : 7
go_right             : 11
go_up                : 1
map_assign           : 15
run_solution         : 3
set_obstacle         : 14
set_traverse         : 4
solution_assign      : 16
start_map            : 12
switch_map           : 13
undo_move            : 8

Parsing method: LALR

state 0

    (0) S' -> . eval
    (1) eval -> . go_up
    (2) eval -> . end_map
    (3) eval -> . run_solution
    (4) eval -> . set_traverse
    (5) eval -> . go_down
    (6) eval -> . exit_game
    (7) eval -> . go_left
    (8) eval -> . undo_move
    (9) eval -> . build_map
    (10) eval -> . build_solution
    (11) eval -> . go_right
    (12) eval -> . start_map
    (13) eval -> . switch_map
    (14) eval -> . set_obstacle
    (15) eval -> . map_assign
    (16) eval -> . solution_assign
    (17) eval -> . empty
    (18) go_up -> . MOVE UP
    (19) go_up -> . MOVE UP INT
    (20) go_up -> . MOVE UP LP INT RP
    (21) end_map -> . SET END AT INT INT
    (22) run_solution -> . RUN ID
    (23) set_traverse -> . SET TRAVERSE TO INT INT COMMA INT INT
    (24) go_down -> . MOVE DOWN
    (25) go_down -> . MOVE DOWN INT
    (26) go_down -> . MOVE DOWN LP INT RP
    (27) exit_game -> . EXIT
    (28) go_left -> . MOVE LEFT
    (29) go_left -> . MOVE LEFT INT
    (30) go_left -> . MOVE LEFT LP INT RP
    (31) undo_move -> . UNDO
    (32) build_map -> . BUILD MAP ID
    (33) build_solution -> . BUILD SOLUTION ID
    (34) go_right -> . MOVE RIGHT
    (35) go_right -> . MOVE RIGHT INT
    (36) go_right -> . MOVE RIGHT LP INT RP
    (37) start_map -> . SET START AT INT INT
    (38) switch_map -> . SWITCH TO ID
    (39) set_obstacle -> . ADD ID AT INT INT
    (40) set_obstacle -> . ADD ID AT INT COMMA INT
    (41) set_obstacle -> . ADD ID AT LP INT COMMA INT RP
    (42) map_assign -> . CREATE MAP NAMED ID
    (43) solution_assign -> . CREATE SOLUTION NAMED ID
    (44) empty -> .

    MOVE            shift and go to state 19
    SET             shift and go to state 20
    RUN             shift and go to state 21
    EXIT            shift and go to state 22
    UNDO            shift and go to state 23
    BUILD           shift and go to state 24
    SWITCH          shift and go to state 25
    ADD             shift and go to state 26
    CREATE          shift and go to state 27
    $end            reduce using rule 44 (empty -> .)

    eval                           shift and go to state 1
    go_up                          shift and go to state 2
    end_map                        shift and go to state 3
    run_solution                   shift and go to state 4
    set_traverse                   shift and go to state 5
    go_down                        shift and go to state 6
    exit_game                      shift and go to state 7
    go_left                        shift and go to state 8
    undo_move                      shift and go to state 9
    build_map                      shift and go to state 10
    build_solution                 shift and go to state 11
    go_right                       shift and go to state 12
    start_map                      shift and go to state 13
    switch_map                     shift and go to state 14
    set_obstacle                   shift and go to state 15
    map_assign                     shift and go to state 16
    solution_assign                shift and go to state 17
    empty                          shift and go to state 18

state 1

    (0) S' -> eval .



state 2

    (1) eval -> go_up .

    $end            reduce using rule 1 (eval -> go_up .)


state 3

    (2) eval -> end_map .

    $end            reduce using rule 2 (eval -> end_map .)


state 4

    (3) eval -> run_solution .

    $end            reduce using rule 3 (eval -> run_solution .)


state 5

    (4) eval -> set_traverse .

    $end            reduce using rule 4 (eval -> set_traverse .)


state 6

    (5) eval -> go_down .

    $end            reduce using rule 5 (eval -> go_down .)


state 7

    (6) eval -> exit_game .

    $end            reduce using rule 6 (eval -> exit_game .)


state 8

    (7) eval -> go_left .

    $end            reduce using rule 7 (eval -> go_left .)


state 9

    (8) eval -> undo_move .

    $end            reduce using rule 8 (eval -> undo_move .)


state 10

    (9) eval -> build_map .

    $end            reduce using rule 9 (eval -> build_map .)


state 11

    (10) eval -> build_solution .

    $end            reduce using rule 10 (eval -> build_solution .)


state 12

    (11) eval -> go_right .

    $end            reduce using rule 11 (eval -> go_right .)


state 13

    (12) eval -> start_map .

    $end            reduce using rule 12 (eval -> start_map .)


state 14

    (13) eval -> switch_map .

    $end            reduce using rule 13 (eval -> switch_map .)


state 15

    (14) eval -> set_obstacle .

    $end            reduce using rule 14 (eval -> set_obstacle .)


state 16

    (15) eval -> map_assign .

    $end            reduce using rule 15 (eval -> map_assign .)


state 17

    (16) eval -> solution_assign .

    $end            reduce using rule 16 (eval -> solution_assign .)


state 18

    (17) eval -> empty .

    $end            reduce using rule 17 (eval -> empty .)


state 19

    (18) go_up -> MOVE . UP
    (19) go_up -> MOVE . UP INT
    (20) go_up -> MOVE . UP LP INT RP
    (24) go_down -> MOVE . DOWN
    (25) go_down -> MOVE . DOWN INT
    (26) go_down -> MOVE . DOWN LP INT RP
    (28) go_left -> MOVE . LEFT
    (29) go_left -> MOVE . LEFT INT
    (30) go_left -> MOVE . LEFT LP INT RP
    (34) go_right -> MOVE . RIGHT
    (35) go_right -> MOVE . RIGHT INT
    (36) go_right -> MOVE . RIGHT LP INT RP

    UP              shift and go to state 28
    DOWN            shift and go to state 29
    LEFT            shift and go to state 30
    RIGHT           shift and go to state 31


state 20

    (21) end_map -> SET . END AT INT INT
    (23) set_traverse -> SET . TRAVERSE TO INT INT COMMA INT INT
    (37) start_map -> SET . START AT INT INT

    END             shift and go to state 32
    TRAVERSE        shift and go to state 33
    START           shift and go to state 34


state 21

    (22) run_solution -> RUN . ID

    ID              shift and go to state 35


state 22

    (27) exit_game -> EXIT .

    $end            reduce using rule 27 (exit_game -> EXIT .)


state 23

    (31) undo_move -> UNDO .

    $end            reduce using rule 31 (undo_move -> UNDO .)


state 24

    (32) build_map -> BUILD . MAP ID
    (33) build_solution -> BUILD . SOLUTION ID

    MAP             shift and go to state 36
    SOLUTION        shift and go to state 37


state 25

    (38) switch_map -> SWITCH . TO ID

    TO              shift and go to state 38


state 26

    (39) set_obstacle -> ADD . ID AT INT INT
    (40) set_obstacle -> ADD . ID AT INT COMMA INT
    (41) set_obstacle -> ADD . ID AT LP INT COMMA INT RP

    ID              shift and go to state 39


state 27

    (42) map_assign -> CREATE . MAP NAMED ID
    (43) solution_assign -> CREATE . SOLUTION NAMED ID

    MAP             shift and go to state 40
    SOLUTION        shift and go to state 41


state 28

    (18) go_up -> MOVE UP .
    (19) go_up -> MOVE UP . INT
    (20) go_up -> MOVE UP . LP INT RP

    $end            reduce using rule 18 (go_up -> MOVE UP .)
    INT             shift and go to state 42
    LP              shift and go to state 43


state 29

    (24) go_down -> MOVE DOWN .
    (25) go_down -> MOVE DOWN . INT
    (26) go_down -> MOVE DOWN . LP INT RP

    $end            reduce using rule 24 (go_down -> MOVE DOWN .)
    INT             shift and go to state 44
    LP              shift and go to state 45


state 30

    (28) go_left -> MOVE LEFT .
    (29) go_left -> MOVE LEFT . INT
    (30) go_left -> MOVE LEFT . LP INT RP

    $end            reduce using rule 28 (go_left -> MOVE LEFT .)
    INT             shift and go to state 46
    LP              shift and go to state 47


state 31

    (34) go_right -> MOVE RIGHT .
    (35) go_right -> MOVE RIGHT . INT
    (36) go_right -> MOVE RIGHT . LP INT RP

    $end            reduce using rule 34 (go_right -> MOVE RIGHT .)
    INT             shift and go to state 48
    LP              shift and go to state 49


state 32

    (21) end_map -> SET END . AT INT INT

    AT              shift and go to state 50


state 33

    (23) set_traverse -> SET TRAVERSE . TO INT INT COMMA INT INT

    TO              shift and go to state 51


state 34

    (37) start_map -> SET START . AT INT INT

    AT              shift and go to state 52


state 35

    (22) run_solution -> RUN ID .

    $end            reduce using rule 22 (run_solution -> RUN ID .)


state 36

    (32) build_map -> BUILD MAP . ID

    ID              shift and go to state 53


state 37

    (33) build_solution -> BUILD SOLUTION . ID

    ID              shift and go to state 54


state 38

    (38) switch_map -> SWITCH TO . ID

    ID              shift and go to state 55


state 39

    (39) set_obstacle -> ADD ID . AT INT INT
    (40) set_obstacle -> ADD ID . AT INT COMMA INT
    (41) set_obstacle -> ADD ID . AT LP INT COMMA INT RP

    AT              shift and go to state 56


state 40

    (42) map_assign -> CREATE MAP . NAMED ID

    NAMED           shift and go to state 57


state 41

    (43) solution_assign -> CREATE SOLUTION . NAMED ID

    NAMED           shift and go to state 58


state 42

    (19) go_up -> MOVE UP INT .

    $end            reduce using rule 19 (go_up -> MOVE UP INT .)


state 43

    (20) go_up -> MOVE UP LP . INT RP

    INT             shift and go to state 59


state 44

    (25) go_down -> MOVE DOWN INT .

    $end            reduce using rule 25 (go_down -> MOVE DOWN INT .)


state 45

    (26) go_down -> MOVE DOWN LP . INT RP

    INT             shift and go to state 60


state 46

    (29) go_left -> MOVE LEFT INT .

    $end            reduce using rule 29 (go_left -> MOVE LEFT INT .)


state 47

    (30) go_left -> MOVE LEFT LP . INT RP

    INT             shift and go to state 61


state 48

    (35) go_right -> MOVE RIGHT INT .

    $end            reduce using rule 35 (go_right -> MOVE RIGHT INT .)


state 49

    (36) go_right -> MOVE RIGHT LP . INT RP

    INT             shift and go to state 62


state 50

    (21) end_map -> SET END AT . INT INT

    INT             shift and go to state 63


state 51

    (23) set_traverse -> SET TRAVERSE TO . INT INT COMMA INT INT

    INT             shift and go to state 64


state 52

    (37) start_map -> SET START AT . INT INT

    INT             shift and go to state 65


state 53

    (32) build_map -> BUILD MAP ID .

    $end            reduce using rule 32 (build_map -> BUILD MAP ID .)


state 54

    (33) build_solution -> BUILD SOLUTION ID .

    $end            reduce using rule 33 (build_solution -> BUILD SOLUTION ID .)


state 55

    (38) switch_map -> SWITCH TO ID .

    $end            reduce using rule 38 (switch_map -> SWITCH TO ID .)


state 56

    (39) set_obstacle -> ADD ID AT . INT INT
    (40) set_obstacle -> ADD ID AT . INT COMMA INT
    (41) set_obstacle -> ADD ID AT . LP INT COMMA INT RP

    INT             shift and go to state 66
    LP              shift and go to state 67


state 57

    (42) map_assign -> CREATE MAP NAMED . ID

    ID              shift and go to state 68


state 58

    (43) solution_assign -> CREATE SOLUTION NAMED . ID

    ID              shift and go to state 69


state 59

    (20) go_up -> MOVE UP LP INT . RP

    RP              shift and go to state 70


state 60

    (26) go_down -> MOVE DOWN LP INT . RP

    RP              shift and go to state 71


state 61

    (30) go_left -> MOVE LEFT LP INT . RP

    RP              shift and go to state 72


state 62

    (36) go_right -> MOVE RIGHT LP INT . RP

    RP              shift and go to state 73


state 63

    (21) end_map -> SET END AT INT . INT

    INT             shift and go to state 74


state 64

    (23) set_traverse -> SET TRAVERSE TO INT . INT COMMA INT INT

    INT             shift and go to state 75


state 65

    (37) start_map -> SET START AT INT . INT

    INT             shift and go to state 76


state 66

    (39) set_obstacle -> ADD ID AT INT . INT
    (40) set_obstacle -> ADD ID AT INT . COMMA INT

    INT             shift and go to state 77
    COMMA           shift and go to state 78


state 67

    (41) set_obstacle -> ADD ID AT LP . INT COMMA INT RP

    INT             shift and go to state 79


state 68

    (42) map_assign -> CREATE MAP NAMED ID .

    $end            reduce using rule 42 (map_assign -> CREATE MAP NAMED ID .)


state 69

    (43) solution_assign -> CREATE SOLUTION NAMED ID .

    $end            reduce using rule 43 (solution_assign -> CREATE SOLUTION NAMED ID .)


state 70

    (20) go_up -> MOVE UP LP INT RP .

    $end            reduce using rule 20 (go_up -> MOVE UP LP INT RP .)


state 71

    (26) go_down -> MOVE DOWN LP INT RP .

    $end            reduce using rule 26 (go_down -> MOVE DOWN LP INT RP .)


state 72

    (30) go_left -> MOVE LEFT LP INT RP .

    $end            reduce using rule 30 (go_left -> MOVE LEFT LP INT RP .)


state 73

    (36) go_right -> MOVE RIGHT LP INT RP .

    $end            reduce using rule 36 (go_right -> MOVE RIGHT LP INT RP .)


state 74

    (21) end_map -> SET END AT INT INT .

    $end            reduce using rule 21 (end_map -> SET END AT INT INT .)


state 75

    (23) set_traverse -> SET TRAVERSE TO INT INT . COMMA INT INT

    COMMA           shift and go to state 80


state 76

    (37) start_map -> SET START AT INT INT .

    $end            reduce using rule 37 (start_map -> SET START AT INT INT .)


state 77

    (39) set_obstacle -> ADD ID AT INT INT .

    $end            reduce using rule 39 (set_obstacle -> ADD ID AT INT INT .)


state 78

    (40) set_obstacle -> ADD ID AT INT COMMA . INT

    INT             shift and go to state 81


state 79

    (41) set_obstacle -> ADD ID AT LP INT . COMMA INT RP

    COMMA           shift and go to state 82


state 80

    (23) set_traverse -> SET TRAVERSE TO INT INT COMMA . INT INT

    INT             shift and go to state 83


state 81

    (40) set_obstacle -> ADD ID AT INT COMMA INT .

    $end            reduce using rule 40 (set_obstacle -> ADD ID AT INT COMMA INT .)


state 82

    (41) set_obstacle -> ADD ID AT LP INT COMMA . INT RP

    INT             shift and go to state 84


state 83

    (23) set_traverse -> SET TRAVERSE TO INT INT COMMA INT . INT

    INT             shift and go to state 85


state 84

    (41) set_obstacle -> ADD ID AT LP INT COMMA INT . RP

    RP              shift and go to state 86


state 85

    (23) set_traverse -> SET TRAVERSE TO INT INT COMMA INT INT .

    $end            reduce using rule 23 (set_traverse -> SET TRAVERSE TO INT INT COMMA INT INT .)


state 86

    (41) set_obstacle -> ADD ID AT LP INT COMMA INT RP .

    $end            reduce using rule 41 (set_obstacle -> ADD ID AT LP INT COMMA INT RP .)

